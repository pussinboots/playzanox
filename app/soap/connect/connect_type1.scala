// Generated by <a href="http://scalaxb.org/">scalaxb</a>.
package soap.connect


case class GetSession(authToken: String,
  publicKey: String,
  signature: String,
  nonce: String,
  timestamp: String)


case class GetSessionResponse(session: Option[soap.connect.SessionType] = None)


case class SessionType(connectId: String,
  sessionKey: Option[String] = None,
  secretKey: Option[String] = None,
  sessionExpires: Int,
  offlineToken: Option[String] = None)


case class CreateConnectRequest(applicationId: String,
  connectId: Option[String] = None,
  loginId: Option[Int] = None,
  role: Option[soap.connect.RoleType] = None,
  publicKey: String,
  timestamp: String,
  nonce: String,
  signature: String)


case class CreateConnectResponse(connectId: String)

trait RoleType

object RoleType {
  def fromString(value: String): RoleType = value match {
    case "DEVELOPER" => DEVELOPER
    case "CUSTOMER" => CUSTOMER
    case "TESTER" => TESTER

  }
}

case object DEVELOPER extends RoleType { override def toString = "DEVELOPER" }
case object CUSTOMER extends RoleType { override def toString = "CUSTOMER" }
case object TESTER extends RoleType { override def toString = "TESTER" }


case class GetUiUrl(connectId: String,
  sessionKey: String,
  timestamp: String,
  nonce: String,
  signature: String)


case class GetUiUrlResponse(url: String)


case class SoapException(message: String,
  code: Int)


case class CloseSession(connectId: String,
  publicKey: String,
  timestamp: String,
  nonce: String,
  signature: String)


case class CloseSessionResponse()


case class PromoteSessionRequest(connectId: String,
  promoteType: soap.connect.PromoteTypeEnum,
  publicKey: String,
  timestamp: String,
  nonce: String,
  signature: String)


case class PromoteSessionResponse(wsSessionExpires: Int,
  uiSessionExpires: Int)

trait PromoteTypeEnum

object PromoteTypeEnum {
  def fromString(value: String): PromoteTypeEnum = value match {
    case "UISESSION" => UISESSION
    case "WSSESSION" => WSSESSION
    case "BOTH" => BOTH

  }
}

case object UISESSION extends PromoteTypeEnum { override def toString = "UISESSION" }
case object WSSESSION extends PromoteTypeEnum { override def toString = "WSSESSION" }
case object BOTH extends PromoteTypeEnum { override def toString = "BOTH" }


case class GetOfflineSession(offlineToken: String,
  publicKey: String,
  signature: String,
  nonce: String,
  timestamp: String)


case class GetOfflineSessionResponse(session: Option[soap.connect.SessionType] = None)

